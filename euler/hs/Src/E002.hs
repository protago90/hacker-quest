-- by protago90
module Src.E002 where

import Src.Utils (promptify, Solver(..))


runE2 :: (Ord a, Num a, Integral a) => a -> a -> a -> a
runE2 n nn x 
    | n >= x    = 0
    | otherwise = ifP n + runE2 nn (n + nn) x
    where ifP m = if (even . (`mod` 2)) m then m else 0

runE2' :: (Ord a, Num a, Integral a) => a -> a
runE2' x = sum $ takeWhile (< x) $ filter p $ genFibo 1 2
    where genFibo n nn = n: genFibo nn (n + nn)
          p m = (even . (`mod` 2)) m


solverE2 = Solver 2 (runE2 1 2) 4000000
{-- Even Fibonacci numbers
    Each new term in the Fibonacci sequence is generated by adding the previous two
    terms. By starting with 1 and 2, the first 10 terms will be:
    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
    > By considering the terms in the Fibonacci sequence whose values do not exceed
    four million, find the sum of the even-valued terms. --}


main = do
    promptify solverE2
 -- >> the anwser for the #2 euler problem is >4613732<; computed in 0.0000s âˆŽ